name: Java CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  check-label:
    runs-on: ubuntu-latest
    outputs:
      has-label: ${{ steps.label-check.outputs.has-label }}
    steps:
      - name: Check for specific label
        id: label-check
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const payload = context.payload.pull_request;
            const label = 'special-label'; // Change to your specific label
            const hasLabel = payload.labels.some(l => l.name === label);
            core.setOutput('has-label', hasLabel.toString());
  job-with-label:
    needs: check-label
    if: needs.check-label.outputs.has-label == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run steps for special-label
        run: |
          echo "Running steps for PR with 'special-label'"
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Generate coverage report
        if: "!contains(github.event.pull_request.labels.*.name, 'Skip_Coverage_Check')"
        run: mvn test jacoco:report && echo "Label"

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ contains(github.event.pull_request.labels.*.name, 'Skip_Coverage_Check') && 'skipcheck' || 'maintest' }}

  job-without-label:
    needs: check-label
    if: needs.check-label.outputs.has-label == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run steps for PR without special-label
        run: |
          echo "Running steps for PR without 'special-label'"
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Generate coverage report
        if: "!contains(github.event.pull_request.labels.*.name, 'Skip_Coverage_Check')"
        run: mvn test jacoco:report && echo "Label"

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ contains(github.event.pull_request.labels.*.name, 'Skip_Coverage_Check') && 'skipcheck' || 'maintest' }}
